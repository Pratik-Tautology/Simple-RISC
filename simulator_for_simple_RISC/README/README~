================================================
Functional Simulator for simpleRISC processor
================================================

README

Table of contents
1. What the software is doing
2. Directory Structure
3. How to build
4. How to execute
5. Known limitations/bugs if any
6. How output looks like, if there is any.


1. What the software does.
------------------------------
The software runs a simpleRISC assembly code given in the form of Program Counter and proper encoded Instructions .
The software is implemetation with as well as without pipeline.


2. Directory Structure:
-----------------------
2015CSB1024_2015CSB1025_functional
  |
  |- bin
      |
      |- mySimpleSim
  |- include
      |
      |- mySimpleSim.h
  |- src
      |- main.cpp
      |- Makefile
      |- mySimpleSim.cpp
  |- test
      |- fun.mem
      |- fibonacci.mem
      |- array_sum.mem
      |- loop.mem
      |- mov.mem
      |- power.mem
      |- square.mem
      |- call.mem
      |- n1.mem


3. How to build
----------------
For building:
	$cd src
	$make

For cleaning the project:
	$cd src
	$make clean


4. How to execute
------------------
$cd bin
./mySimpleSim "..test/array_sum.mem"
After that select choices accordingly.


5. Limitations
--------------
- We have taken a maximum limit of 1000 instructions(4000 bytes) per code.
- Data memory is limited to 12000 bytes.
- Each register can hold an integer of size atmost 4 bytes.


6. Output
---------
After execution of each instruction the terminal shows value of - 
- Program Counter
- Instruction
- Registers from 0 to 15

A data_out.mem file is made after execution of the code in the bin directory which contains the entire memory of 4000 bytes having instructions and data memory.



